# COMP90024 Cluster and Cloud Computer Team 12
# @Author: Shizhe Cai
# @student id: 798125
# @email: shizhec@student.unimelb.edu.au
---
# create working directory for server
- name: create server directory
  tags: 'server'
  become: yes
  file:
    path: "{{ server_directory }}"
    owner: ubuntu
    group: ubuntu
    recurse: yes
    state: directory

# create working directory for nginx
- name: create nginx directory
  tags: 'nginx'
  become: yes
  file:
    path: "{{ nginx_directory }}"
    owner: ubuntu
    group: ubuntu
    recurse: yes
    state: directory

# render template of the docker compose of server and nginx
- name: Configure docker compose for server and ngix
  tags: 'nginx'
  become: yes
  template:
    src: instance1-docker-compose.yaml.j2
    dest: "{{ working_directory }}/docker-compose.yaml"
    owner: ubuntu
    group: ubuntu

# configure docker file for nginx
- name: Configure nginx docker file
  tags: 'nginx'
  become: yes
  template:
    src: nginx-dockerfile.j2
    dest: "{{ nginx_directory }}/Dockerfile"
    owner: ubuntu
    group: ubuntu

# configure configuration file for nginx
- name: Configure nginx config file
  tags: 'nginx'
  become: yes
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_directory }}/nginx.conf"
    owner: ubuntu
    group: ubuntu

# configure docker file for server
- name: Configure server docker file
  tags: 'server'
  become: yes
  template:
    src: server-dockerfile.j2
    dest: "{{ server_directory }}/Dockerfile"
    owner: ubuntu
    group: ubuntu

# configure env file for server
- name: Configure server env file
  tags: 'server'
  become: yes
  template:
    src: server-env.j2
    dest: "{{ server_directory }}/.env_server"
    owner: ubuntu
    group: ubuntu

# configure entrypoint for server
- name: Configure server entrypoint
  tags: 'server'
  become: yes
  template:
    src: server-entrypoint.sh.j2
    dest: "{{ server_directory }}/entrypoint.sh"
    owner: ubuntu
    group: ubuntu

# configure requirements file for nginx
- name: Configure requirements
  tags: 'server'
  become: yes
  template:
    src: server-requirements.txt.j2
    dest: "{{ server_directory }}/requirements.txt"
    owner: ubuntu
    group: ubuntu

# delete directory first
- name: delete Web directory
  file:
    path: "{{ server_directory }}/Web"
    state: absent

- name: delete frontend directory
  file:
    path: "{{ server_directory }}/frontend"
    state: absent

- name: Create Web directory
  tags: 'server'
  become: yes
  file:
    path: "{{ server_directory }}/Web"
    owner: ubuntu
    group: ubuntu
    recurse: yes
    state: directory

- name: Create Frontend directory
  tags: 'server'
  become: yes
  file:
    path: "{{ server_directory }}/frontend"
    owner: ubuntu
    group: ubuntu
    recurse: yes
    state: directory

# copy web file to working directory
- name: Copy Web File
  copy:
    src: "{{ project_directory }}/Web/"
    dest: "{{ server_directory }}/Web/"
    force: yes
    remote_src: yes

# copy frontend file to working directory
- name: Copy frontend File
  copy:
    src: "{{ project_directory }}/frontend/"
    dest: "{{ server_directory }}/frontend/"
    force: yes
    remote_src: yes

- name: Run npm install
  command: npm install
  args:
    chdir: "{{ server_directory }}/frontend/"

- name: Run npm run build
  command: npm run build
  args:
    chdir: "{{ server_directory }}/frontend/"

# docker-compose build
# docker-compose up
- name: Run docker compose for server and nginx
  tags: 'nginx'
  become: yes
  docker_compose:
    project_src: "{{ working_directory }}"
    pull: yes
    state: present
    remove_orphans: yes
    recreate: always
    build: yes