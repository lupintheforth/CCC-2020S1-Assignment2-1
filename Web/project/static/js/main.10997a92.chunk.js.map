{"version":3,"sources":["js/actions/loading.js","js/actionTypes/loading.js","js/actions/xhr.js","js/constants/api.js","js/actionTypes/xhr.js","js/components/Spinner.jsx","js/constants/map.js","js/actions/map.js","js/actionTypes/map.js","js/actions/filter.js","js/actionTypes/filter.js","js/components/gadgets/CollapseButton.jsx","js/components/gadgets/TitleWithTooltip.jsx","js/components/Filter.jsx","js/components/Map.jsx","js/components/Dashboard.jsx","js/actions/search.js","js/actionTypes/search.js","js/components/SearchField.jsx","js/components/Header.jsx","js/components/App.jsx","js/reducers/mapReducer.js","js/reducers/searchReducer.js","js/reducers/loadingReducer.js","js/reducers/xhrReducer.js","js/reducers/filterReducer.js","js/reducers/index.js","index.js"],"names":["updateLoadingStatus","isLoading","type","payload","getOverviewData","dispatch","fetch","then","res","ok","json","statusText","overviewData","Spinner","connect","state","loading","containerClass","className","FULL_SCREEN_MAP","ZOOM_BOUNDARY","min","max","INITIAL_CENTER","lng","lat","CARD_MAP","updateMapFullScreenStatus","isFullScreen","updateDatePickerExpansionStatus","showDatePicker","CollapseButton","onClickHandler","icon","DoubleRightOutlined","onClick","TitleWithTooltip","title","tooltipInfo","placement","FilterComponent","this","props","expandDatePicker","hideDatePicker","datesRange","updateDateRange","dateRangePicker","RangePicker","defaultValue","onChange","date","disabledDate","current","moment","endOf","CalendarOutlined","span","hoverable","id","Component","Filter","map","filter","ownProps","selectedDateRange","MapComponent","console","log","enterFullScreen","exitFullScreen","updateMapCenterAndZoom","SwitchComponent","FullscreenExitOutlined","switchClickHandler","mapZoomConstant","containerStyle","height","width","FullscreenOutlined","renderedMapBox","style","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","options","gestureHandling","zoomControl","fullscreenControl","maxZoom","minZoom","value","Map","xhr","Dashboard","updateSearchFieldExpansionStatus","showSearchInput","SearchFieldComponent","__handleSelect","bind","__handleSearch","option","expandSearchField","hideSearchField","dropdownMatchSelectWidth","onSelect","onSearch","Search","size","placeholder","enterButton","SearchOutlined","SearchField","search","HeaderComponent","Header","AppComponent","App","MAP_REDUCER_DEFAULT_VALUE","SEARCH_REDUCER_DEFAULT_VALUE","LOADING_REDUCER_DEFAULT_VALUE","XHR_REDUCER","FILTER_REDUCER_DEFAULT_VALUE","combineReducers","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.10997a92.chunk.js","sourcesContent":["import { UPDATE_LOADING_STATUS } from \"../actionTypes/loading\";\n\nfunction updateLoadingStatus(isLoading = false) {\n  return {\n    type: UPDATE_LOADING_STATUS,\n    payload: { isLoading },\n  };\n}\n\nexport const startLoading = () => updateLoadingStatus(true);\nexport const stopLoading = () => updateLoadingStatus();\n","export const UPDATE_LOADING_STATUS = \"UPDATE_LOADING_STATUS\";\n","import { startLoading, stopLoading } from \"./loading\";\nimport { API__GET_OVERALL_INFO } from \"../constants/api\";\nimport { OVERVIEW_DATA_RECEIVED } from \"../actionTypes/xhr\";\n\nexport function getOverviewData() {\n  return (dispatch) => {\n    dispatch(startLoading());\n\n    return fetch(API__GET_OVERALL_INFO)\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        throw res.statusText;\n      })\n      .then((overviewData) => {\n        dispatch(stopLoading());\n        dispatch({ type: OVERVIEW_DATA_RECEIVED, payload: { overviewData } });\n      });\n  };\n}\n","export const API__GET_OVERALL_INFO = \"/api/overview\";\n","export const OVERVIEW_DATA_RECEIVED = \"OVERVIEW_DATA_RECEIVED\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"../../css/spinner.css\";\n\n/**\n * Acknowledgement: this spinner is borrowed from [this website](https://tobiasahlin.com/spinkit/).\n *\n * @returns\n */\nfunction SpinnerComponent({ isLoading }) {\n  const containerClass = \"spinner-container\" + (isLoading ? \"\" : \" hidden\");\n  return (\n    <section className={containerClass}>\n      <div className=\"sk-chase\">\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const { isLoading } = state.loading;\n  return { isLoading };\n};\n\nconst Spinner = connect(mapStateToProps)(SpinnerComponent);\n\nexport { Spinner };\n","// Map max boundary.\nconst AUSTRALIA_MAP_SW_BOUND = [98.49663749999871, -44.645685161059006];\nconst AUSTRALIA_MAP_NE_BOUND = [172.10503593749945, -7.570101850059672];\nexport const AUSTRALIA_MAP_BOUNDS = [\n  AUSTRALIA_MAP_SW_BOUND,\n  AUSTRALIA_MAP_NE_BOUND,\n];\n\n// Map zoom boundary.\nexport const FULL_SCREEN_MAP = {\n  ZOOM_BOUNDARY: { min: 5, max: 12 },\n  INITIAL_CENTER: { lng: 135.4107, lat: -27.616 },\n};\n\nexport const CARD_MAP = {\n  ZOOM_BOUNDARY: { min: 4.5, max: 12 },\n  INITIAL_CENTER: { lng: 135.4107, lat: -14 },\n};\n","import {\n  UPDATE_MAP_FULL_SCREEN_STATUS,\n  UPDATE_MAP_CENTER_AND_ZOOM,\n} from \"../actionTypes/map\";\n\nexport function updateMapFullScreenStatus(isFullScreen = true) {\n  return {\n    type: UPDATE_MAP_FULL_SCREEN_STATUS,\n    payload: { isFullScreen },\n  };\n}\n\nexport function updateMapCenterAndZoom(center, zoom) {\n  return {\n    type: UPDATE_MAP_CENTER_AND_ZOOM,\n    payload: { center, zoom },\n  };\n}\n","export const UPDATE_MAP_FULL_SCREEN_STATUS = \"UPDATE_MAP_FULL_SCREEN_STATUS\";\nexport const UPDATE_MAP_CENTER_AND_ZOOM = \"UPDATE_MAP_CENTER_AND_ZOOM\";\n","import {\n  UPDATE_DATE_PICKER_EXPANSION_STATUS,\n  UPDATE_DATE_RANGE,\n} from \"../actionTypes/filter\";\n\nexport function updateDatePickerExpansionStatus(showDatePicker = true) {\n  return {\n    type: UPDATE_DATE_PICKER_EXPANSION_STATUS,\n    payload: { showDatePicker },\n  };\n}\n\nexport function updateDateRange(datesRange = []) {\n  return {\n    type: UPDATE_DATE_RANGE,\n    payload: { datesRange },\n  };\n}\n","export const UPDATE_DATE_PICKER_EXPANSION_STATUS =\n  \"UPDATE_DATE_PICKER_EXPANSION_STATUS\";\nexport const UPDATE_DATE_RANGE = \"UPDATE_DATE_RANGE\";\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { DoubleRightOutlined } from \"@ant-design/icons\";\n\nexport function CollapseButton({ onClickHandler }) {\n  return (\n    <Button\n      icon={<DoubleRightOutlined />}\n      className={\"collapse-btn\"}\n      onClick={onClickHandler}\n    />\n  );\n}\n","import React from \"react\";\nimport { Tooltip } from \"antd\";\n\nexport function TitleWithTooltip({\n  title,\n  tooltipInfo,\n  placement = \"topLeft\",\n}) {\n  return (\n    <Tooltip title={tooltipInfo} placement={placement}>\n      <h3>{title}</h3>\n    </Tooltip>\n  );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { Card, Col } from \"antd\";\nimport { CalendarOutlined } from \"@ant-design/icons\";\nimport { DatePicker } from \"antd\";\n\nimport {\n  updateDatePickerExpansionStatus,\n  updateDateRange,\n} from \"../actions/filter\";\nimport { CollapseButton, TitleWithTooltip } from \"./gadgets\";\n\nimport \"../../css/filter.css\";\n\nclass FilterComponent extends Component {\n  render() {\n    const {\n      isFullScreen,\n      showDatePicker,\n      expandDatePicker,\n      hideDatePicker,\n      datesRange,\n      updateDateRange,\n    } = this.props;\n\n    const dateRangePicker = (\n      <DatePicker.RangePicker\n        defaultValue={datesRange}\n        onChange={(date) => updateDateRange(date)}\n        disabledDate={(current) => current && current > moment().endOf(\"day\")}\n      />\n    );\n\n    if (isFullScreen) {\n      if (showDatePicker) {\n        return (\n          <section className={\"collapsible-section filter map--fullScreen\"}>\n            <CollapseButton onClickHandler={hideDatePicker} />\n            {dateRangePicker}\n          </section>\n        );\n      }\n      return (\n        <CalendarOutlined\n          className={\"clickable filter map--fullScreen\"}\n          onClick={expandDatePicker}\n        />\n      );\n    }\n\n    return (\n      <Col span={12}>\n        <Card hoverable id={\"filter-card\"} className=\"col-6\" title={\"Filters\"}>\n          <Card\n            hoverable\n            type=\"inner\"\n            title={\n              <TitleWithTooltip\n                title={\"Date Range\"}\n                tooltipInfo={\"Please select the date range you want to explore\"}\n              />\n            }\n          >\n            {dateRangePicker}\n          </Card>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isFullScreen } = state.map;\n  const { showDatePicker, datesRange } = state.filter;\n  return { isFullScreen, showDatePicker, datesRange };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    expandDatePicker: () => dispatch(updateDatePickerExpansionStatus()),\n    hideDatePicker: () => dispatch(updateDatePickerExpansionStatus(false)),\n    updateDateRange: (selectedDateRange) =>\n      dispatch(updateDateRange(selectedDateRange)),\n  };\n};\nconst Filter = connect(mapStateToProps, mapDispatchToProps)(FilterComponent);\n\nexport { Filter };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Card } from \"antd\";\nimport { FullscreenExitOutlined, FullscreenOutlined } from \"@ant-design/icons\";\nimport GoogleMapReact from \"google-map-react\";\n\nimport \"../../css/map.css\";\nimport { FULL_SCREEN_MAP, CARD_MAP } from \"../constants/map\";\nimport {\n  updateMapFullScreenStatus,\n  updateMapCenterAndZoom,\n} from \"../actions/map\";\nimport { Filter } from \"./Filter\";\n\nconst GOOGLE_MAP_API_KEY = \"AIzaSyDPvEDDdrknvPKqdpl3lfTv547o2mPltuw\";\n\nclass MapComponent extends Component {\n  render() {\n    console.log(\"Map, this.props = \", this.props);\n\n    const {\n      isFullScreen,\n      enterFullScreen,\n      exitFullScreen,\n      updateMapCenterAndZoom,\n    } = this.props;\n\n    let SwitchComponent = FullscreenExitOutlined;\n    let switchClickHandler = exitFullScreen;\n    let mapZoomConstant = FULL_SCREEN_MAP.ZOOM_BOUNDARY;\n    let containerStyle = {\n      height: \"100vh\",\n      width: \"100%\",\n    };\n\n    if (!isFullScreen) {\n      SwitchComponent = FullscreenOutlined;\n      switchClickHandler = enterFullScreen;\n      mapZoomConstant = CARD_MAP.ZOOM_BOUNDARY;\n      containerStyle = {\n        height: \"100%\",\n        width: \"100%\",\n      };\n    }\n\n    const renderedMapBox = (\n      <>\n        <div style={containerStyle}>\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: GOOGLE_MAP_API_KEY }}\n            defaultCenter={this.props.center}\n            defaultZoom={this.props.zoom}\n            options={{\n              gestureHandling: isFullScreen ? \"cooperative\" : \"greedy\",\n              zoomControl: false,\n              fullscreenControl: false,\n              maxZoom: mapZoomConstant.max,\n              minZoom: mapZoomConstant.min,\n            }}\n            onChange={({ zoom, center }) =>\n              updateMapCenterAndZoom(center, zoom)\n            }\n            onClick={(value) =>\n              console.log(\"onClick trigerred, value =\", value)\n            }\n          ></GoogleMapReact>\n        </div>\n\n        <SwitchComponent\n          className={\"clickable map-full-screen-switch\"}\n          onClick={() => {\n            switchClickHandler();\n          }}\n        />\n        {isFullScreen && <Filter />}\n      </>\n    );\n\n    if (isFullScreen) {\n      return renderedMapBox;\n    }\n\n    return (\n      <Row id={\"map-container\"}>\n        <Col span={12}>\n          <Card hoverable className=\"col-6\">\n            {renderedMapBox}\n          </Card>\n        </Col>\n        <Filter />\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isFullScreen, center, zoom } = state.map;\n  const { overviewData } = state.xhr;\n  return { isFullScreen, center, zoom, overviewData };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    enterFullScreen: () => dispatch(updateMapFullScreenStatus(true)),\n    exitFullScreen: () => dispatch(updateMapFullScreenStatus(false)),\n    updateMapCenterAndZoom: (center, zoom) =>\n      dispatch(updateMapCenterAndZoom(center, zoom)),\n  };\n};\n\nconst Map = connect(mapStateToProps, mapDispatchToProps)(MapComponent);\n\nexport { Map };\n","import React, { Component } from \"react\";\nimport { Row, Col, Card } from \"antd\";\nimport \"antd/dist/antd.min.css\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <Row>\n        <Col span={12}>\n          <Card hoverable className=\"col-6\" title=\"Card One\">\n            Card 1\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card hoverable className=\"col-6\" title=\"Card Two\">\n            Card 2\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport { Dashboard };\n","import { UPDATE_SEARCH_FIELD_EXPANSION_STATUS } from \"../actionTypes/search\";\n\nexport function updateSearchFieldExpansionStatus(showSearchInput = true) {\n  return {\n    type: UPDATE_SEARCH_FIELD_EXPANSION_STATUS,\n    payload: { showSearchInput },\n  };\n}\n","export const UPDATE_SEARCH_FIELD_EXPANSION_STATUS =\n  \"UPDATE_SEARCH_FIELD_EXPANSION_STATUS\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AutoComplete, Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nimport { updateSearchFieldExpansionStatus } from \"../actions/search\";\nimport { CollapseButton } from \"./gadgets/CollapseButton\";\n\nclass SearchFieldComponent extends Component {\n  __handleSelect(value, option) {\n    console.log(\"in handleSelect, value =\", value);\n    console.log(\"in handleSelect, option =\", option);\n  }\n\n  __handleSearch(value) {\n    // use throttling to send query to backend.\n    console.log(\"in handleSearch, value =\", value);\n  }\n\n  constructor(props) {\n    super(props);\n    this.__handleSelect = this.__handleSelect.bind(this);\n    this.__handleSearch = this.__handleSearch.bind(this);\n  }\n\n  render() {\n    const { showSearchInput, expandSearchField, hideSearchField } = this.props;\n    if (!showSearchInput) {\n      return (\n        <SearchOutlined className={\"clickable\"} onClick={expandSearchField} />\n      );\n    }\n\n    return (\n      <section className={\"collapsible-section\"}>\n        <CollapseButton onClickHandler={hideSearchField} />\n        <AutoComplete\n          dropdownMatchSelectWidth={300}\n          style={{\n            width: 500,\n          }}\n          onSelect={this.__handleSelect}\n          onSearch={this.__handleSearch}\n        >\n          <Input.Search\n            size=\"large\"\n            placeholder=\"Search the location, or tweet user here.\"\n            enterButton\n          />\n        </AutoComplete>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { showSearchInput } = state.search;\n  return { showSearchInput };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    expandSearchField: () => dispatch(updateSearchFieldExpansionStatus()),\n    hideSearchField: () => dispatch(updateSearchFieldExpansionStatus(false)),\n  };\n};\n\nconst SearchField = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchFieldComponent);\n\nexport { SearchField };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"../../css/header.css\";\nimport { SearchField } from \"./SearchField\";\n\nclass HeaderComponent extends Component {\n  render() {\n    const { isFullScreen } = this.props;\n    let className = isFullScreen ? \"map--fullScreen\" : \"map--card\";\n\n    return (\n      <header className={className}>\n        <span>COVID-19 Australia Info Center</span>\n        <SearchField />\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isFullScreen } = state.map;\n  return { isFullScreen };\n};\n\nconst Header = connect(mapStateToProps)(HeaderComponent);\n\nexport { Header };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getOverviewData } from \"../actions/xhr\";\n\nimport { Spinner } from \"./Spinner\";\nimport { Map } from \"./Map\";\nimport { Dashboard } from \"./Dashboard\";\nimport { Header } from \"./Header\";\n\nclass AppComponent extends Component {\n  componentDidMount() {\n    this.props.getOverviewData();\n  }\n\n  render() {\n    const { isFullScreen } = this.props;\n\n    return (\n      <>\n        <Spinner />\n        <Header />\n        <Map />\n        <Dashboard />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isFullScreen } = state.map;\n  return { isFullScreen };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getOverviewData: () => getOverviewData()(dispatch),\n  };\n};\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(AppComponent);\n\nexport { App };\n","import {\n  UPDATE_MAP_FULL_SCREEN_STATUS,\n  UPDATE_MAP_CENTER_AND_ZOOM,\n} from \"../actionTypes/map\";\nimport { FULL_SCREEN_MAP } from \"../constants/map\";\n\nconst MAP_REDUCER_DEFAULT_VALUE = {\n  isFullScreen: true,\n  center: FULL_SCREEN_MAP.INITIAL_CENTER,\n  zoom: FULL_SCREEN_MAP.ZOOM_BOUNDARY.min,\n};\n\nexport function mapReducer(state = MAP_REDUCER_DEFAULT_VALUE, action) {\n  switch (action.type) {\n    case UPDATE_MAP_FULL_SCREEN_STATUS:\n    case UPDATE_MAP_CENTER_AND_ZOOM:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SEARCH_FIELD_EXPANSION_STATUS } from \"../actionTypes/search\";\n\nconst SEARCH_REDUCER_DEFAULT_VALUE = {\n  showSearchInput: false,\n};\n\nexport function searchReducer(state = SEARCH_REDUCER_DEFAULT_VALUE, action) {\n  switch (action.type) {\n    case UPDATE_SEARCH_FIELD_EXPANSION_STATUS:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_LOADING_STATUS } from \"../actionTypes/loading\";\n\nconst LOADING_REDUCER_DEFAULT_VALUE = {\n  isLoading: false,\n};\n\nexport function loadingReducer(state = LOADING_REDUCER_DEFAULT_VALUE, action) {\n  switch (action.type) {\n    case UPDATE_LOADING_STATUS:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { OVERVIEW_DATA_RECEIVED } from \"../actionTypes/xhr\";\n\nconst XHR_REDUCER = {\n  overviewData: {},\n};\n\nexport function xhrReducer(state = XHR_REDUCER, action) {\n  switch (action.type) {\n    case OVERVIEW_DATA_RECEIVED:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n}\n","import {\n  UPDATE_DATE_PICKER_EXPANSION_STATUS,\n  UPDATE_DATE_RANGE,\n} from \"../actionTypes/filter\";\n\nconst FILTER_REDUCER_DEFAULT_VALUE = {\n  showDatePicker: false,\n  datesRange: [],\n};\n\nexport function filterReducer(state = FILTER_REDUCER_DEFAULT_VALUE, action) {\n  switch (action.type) {\n    case UPDATE_DATE_PICKER_EXPANSION_STATUS:\n    case UPDATE_DATE_RANGE:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { mapReducer } from \"./mapReducer\";\nimport { searchReducer } from \"./searchReducer\";\nimport { loadingReducer } from \"./loadingReducer\";\nimport { xhrReducer } from \"./xhrReducer\";\nimport { filterReducer } from \"./filterReducer\";\n\nexport default combineReducers({\n  map: mapReducer,\n  search: searchReducer,\n  loading: loadingReducer,\n  xhr: xhrReducer,\n  filter: filterReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport \"./css/antd.css\";\n\nimport { App } from \"./js/components/App\";\nimport reducers from \"./js/reducers\";\n\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}